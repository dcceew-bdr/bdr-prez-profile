@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix altr-ext: <http://www.w3.org/ns/dx/connegp/altr-ext#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix prez: <https://prez.dev/> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shext: <http://example.com/shacl-extension#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schema: <https://schema.org/> .
@prefix tern: <https://w3id.org/tern/ontologies/tern/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix prezprofiles: <https://prez/profiles/> .
@prefix abis: <https://linked.data.gov.au/def/abis/> .
@prefix dwciri: <http://rs.tdwg.org/dwc/iri/> .
@prefix dwc: <http://rs.tdwg.org/dwc/terms/> .

<https://prez/profiles> {

  prezprofiles:BDR-item
    a prof:Profile, prez:ObjectProfile, sh:NodeShape ;
    dcterms:title "BDR Standard Object Profile" ;
    dcterms:description "A profile for individual BDR Prez API items" ;
    dcterms:identifier "bdr-item"^^xsd:token ;
    altr-ext:hasResourceFormat
        "application/ld+json",
        "application/anot+ld+json",
        "application/rdf+xml",
        "text/anot+turtle",
        "text/turtle",
        "application/n-triples" ;
    altr-ext:hasDefaultResourceFormat "text/turtle" ;
    sh:property
        [
            sh:path
                [
                    sh:union (
                                 [ shext:bNodeDepth "2" ]
                                 shext:allPredicateValues
                             )
                ]
        ],
        [
            sh:maxCount 0 ;
            sh:path dcterms:hasPart , schema:hasPart , rdfs:member , skos:member ;
        ] ;
    altr-ext:constrainsClass
        schema:Dataset,
        schema:DataCatalog,
        abis:BiodiversityRecord,
        skos:ConceptScheme,
        skos:Collection,
        skos:Concept,
        rdf:Resource,
        prof:Profile ;
  .

  prezprofiles:custom-mem a prof:Profile , prez:ListingProfile ;
    dcterms:description "A very basic data model that lists the members of container objects only, i.e. not their other properties. Has default format of text/turtle to avoid unintended annotations." ;
    dcterms:identifier "custom-mem"^^xsd:token ;
    dcterms:title "Members" ;
    altr-ext:constrainsClass geo:FeatureCollection ,
                             dcat:Dataset ,
                             schema:Dataset,
                             dcat:Catalog ,
                             schema:DataCatalog,
                             skos:ConceptScheme ,
                             skos:Collection ,
                             prez:CQLFilterResult ,
                             prez:QueryablesList ,
                             prof:Profile ;
    altr-ext:hasDefaultResourceFormat "text/turtle" ;
    altr-ext:hasResourceFormat
        "application/ld+json" ,
        "application/anot+ld+json" ,
        "application/rdf+xml" ,
        "text/anot+turtle" ,
        "text/turtle" ;
    sh:property [
        sh:path rdf:type ;
        ] ;
  .
    prezprofiles:BDRHumanFeatureProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "BDR Human Readable profile." ;
        dcterms:identifier "bdr-feature-human"^^xsd:token ;
        dcterms:title "BDR Feature Human Readable Profile" ;
        altr-ext:constrainsClass
            geo:Feature , rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                     shext:allPredicateValues
                                     [ shext:bNodeDepth "2" ]
                                     ( geo:hasGeometry geo:asWKT )
                                     ( geo:hasDefaultGeometry geo:asWKT )
                                     ( schema:temporal shext:allPredicateValues )
                                     ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                     ( dwciri:toTaxon dwc:originalNameUsageID )
                                     ( dwciri:toTaxon dwc:parentNameUsageID )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:usedProcedure )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:usedProcedure tern:hasMethod )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:phenomenonTime time:inXSDDateTimeStamp )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath rdfs:member ] rdf:type )
                                     ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                     ( [sh:inversePath schema:about] rdfs:comment )
                                     ( [sh:inversePath schema:about] schema:identifier )
                                     ( [sh:inversePath schema:about] schema:isPartOf )
                                 )
                    ]
            ] ;
    .

    prezprofiles:BDRHumanFeatureWithAttributesProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "BDR Human Readable profile with additional TERN attributes." ;
        dcterms:identifier "bdr-feature-attributes-human"^^xsd:token ;
        dcterms:title "BDR Feature and Attributes Human Readable Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasNodeShape
            [
                a sh:NodeShape ;
                sh:targetClass geo:Feature ;
                altr-ext:hasDefaultProfile prezprofiles:BDRHumanFeatureWithAttributesProfile
            ] ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                     shext:allPredicateValues
                                     [ shext:bNodeDepth "2" ]
                                     ( geo:hasGeometry geo:asWKT )
                                     ( geo:hasDefaultGeometry geo:asWKT )
                                     ( schema:temporal shext:allPredicateValues )
                                     ( tern:hasAttribute tern:attribute )
                                     ( tern:hasAttribute tern:hasSimpleValue )
                                     ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                     ( dwciri:toTaxon dwc:originalNameUsageID )
                                     ( dwciri:toTaxon dwc:parentNameUsageID )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:usedProcedure )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:hasAttribute tern:attribute )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:hasAttribute tern:hasSimpleValue )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:usedProcedure tern:hasMethod )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:hasAttribute tern:attribute )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:hasAttribute tern:hasSimpleValue )
                                     ( [ sh:inversePath rdfs:member ] rdf:type )
                                     ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                     ( [sh:inversePath schema:about] rdfs:comment )
                                     ( [sh:inversePath schema:about] schema:identifier )
                                     ( [sh:inversePath schema:about] schema:isPartOf )
                                 )
                    ]
            ] ;
    .


    prezprofiles:BDRMachineFeatureProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile ;
        dcterms:description "BDR Machine Readable profile to return appropriate paths for a Feature." ;
        dcterms:identifier "bdr-feature-machine"^^xsd:token ;
        dcterms:title "BDR Feature Machine Readable Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                     shext:allPredicateValues
                                     [ shext:bNodeDepth "2" ]
                                     ( geo:hasGeometry geo:asWKT )
                                     ( geo:hasDefaultGeometry geo:asWKT )
                                     ( schema:temporal shext:allPredicateValues )
                                     ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                     ( dwciri:toTaxon dwc:originalNameUsageID )
                                     ( dwciri:toTaxon dwc:parentNameUsageID )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:hasSimpleResult )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:hasResult shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:usedProcedure )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasSimpleResult )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasResult shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:usedProcedure tern:hasMethod )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath rdfs:member ] rdf:type )
                                     ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                     ( [ sh:inversePath schema:about ] rdfs:comment )
                                     ( [ sh:inversePath schema:about ] schema:identifier )
                                     ( [ sh:inversePath schema:about ] schema:isPartOf )
                                 )
                    ]
            ] ;
    .

    prezprofiles:BDRMachineFeatureWithAttributesProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile ;
        dcterms:description "BDR Machine Readable profile to return appropriate paths plus TERN Attributes for a Feature." ;
        dcterms:identifier "bdr-feature-attributes-machine"^^xsd:token ;
        dcterms:title "BDR Feature and Attributes Machine Readable Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                     shext:allPredicateValues
                                     [ shext:bNodeDepth "2" ]
                                     ( geo:hasGeometry geo:asWKT )
                                     ( geo:hasDefaultGeometry geo:asWKT )
                                     ( schema:temporal shext:allPredicateValues )
                                     ( tern:hasAttribute tern:attribute )
                                     ( tern:hasAttribute tern:hasSimpleValue )
                                     ( tern:hasAttribute tern:hasValue shext:allPredicateValues )
                                     ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                     ( dwciri:toTaxon dwc:originalNameUsageID )
                                     ( dwciri:toTaxon dwc:parentNameUsageID )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:hasSimpleResult )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:hasResult shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:usedProcedure )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:hasAttribute tern:attribute )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasMember tern:hasAttribute tern:hasSimpleValue )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] rdf:type )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasSimpleResult )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:hasResult shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:observedProperty )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:usedProcedure tern:hasMethod )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:resultDateTime )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] sosa:phenomenonTime shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] schema:temporal shext:allPredicateValues )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:hasAttribute tern:attribute )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:hasAttribute tern:hasSimpleValue )
                                     ( [ sh:inversePath sosa:hasFeatureOfInterest ] tern:hasAttribute tern:hasValue shext:allPredicateValues )
                                     ( [ sh:inversePath rdfs:member ] rdf:type )
                                     ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                     ( [ sh:inversePath schema:about ] rdf:type )
                                     ( [ sh:inversePath schema:about ] rdfs:comment )
                                     ( [ sh:inversePath schema:about ] schema:identifier )
                                     ( [ sh:inversePath schema:about ] schema:isPartOf )
                                 )
                    ]
            ] ;
    .

    prezprofiles:MinimalGeoFeatureListingProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "Fast and minimal profile for listing Geospatial Features, compatible with GeoJSON." ;
        dcterms:identifier "geo-feature-listing-minimal"^^xsd:token ;
        dcterms:title "Geospatial Feature Listing Minimal Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                    rdf:type
                                    schema:identifier
                                    schema:isPartOf
                                    void:inDataset
                                    ( geo:hasGeometry geo:asWKT )
                                    ( geo:hasDefaultGeometry geo:asWKT )
                                    ( [ sh:inversePath rdfs:member ] rdf:type )
                                    ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] rdf:type )
                                    ( [ sh:inversePath schema:about ] schema:identifier )
                                    ( [ sh:inversePath schema:about ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] void:inDataset )
                                 )
                    ]
            ] ;
    .

    prezprofiles:MinimalGeoFeatureListingHumanProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "Fast and minimal profile for listing Geospatial Features, compatible with GeoJSON." ;
        dcterms:identifier "geo-feature-listing-minimal-human"^^xsd:token ;
        dcterms:title "Geospatial Feature Listing Minimal Profile (Human Readable)" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                    rdf:type
                                    schema:identifier
                                    schema:isPartOf
                                    void:inDataset
                                    ( geo:hasGeometry geo:asWKT )
                                    ( geo:hasDefaultGeometry geo:asWKT )
                                    ( [ sh:inversePath rdfs:member ] rdf:type )
                                    ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] rdf:type )
                                    ( [ sh:inversePath schema:about ] schema:identifier )
                                    ( [ sh:inversePath schema:about ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] void:inDataset )
                                 )
                    ]
            ] ;
    .

    prezprofiles:MinimalGeoOccurrenceListingProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "Fast and minimal profile for listing Occurrence Features, compatible with GeoJSON." ;
        dcterms:identifier "geo-occurrence-listing-minimal"^^xsd:token ;
        dcterms:title "Geo Occurrence Listing Minimal Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                    rdf:type
                                    schema:identifier
                                    schema:isPartOf
                                    void:inDataset
                                    ( schema:temporal shext:allPredicateValues )
                                    ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                    ( dwciri:toTaxon dwc:originalNameUsageID )
                                    ( dwciri:toTaxon dwc:parentNameUsageID )
                                    ( geo:hasGeometry geo:asWKT )
                                    ( geo:hasDefaultGeometry geo:asWKT )
                                    ( schema:spatial shext:allPredicateValues )
                                    ( [ sh:inversePath rdfs:member ] rdf:type )
                                    ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] rdf:type )
                                    ( [ sh:inversePath schema:about ] schema:identifier )
                                    ( [ sh:inversePath schema:about ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] void:inDataset )
                                 )
                    ]
            ] ;
    .

    prezprofiles:MinimalGeoOccurrenceListingHumanProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "Fast and minimal profile for listing Occurrence Features, compatible with GeoJSON." ;
        dcterms:identifier "geo-occurrence-listing-minimal-human"^^xsd:token ;
        dcterms:title "Geo Occurrence Listing Minimal Profile (Human Readable)" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "application/geo+json" ;
        altr-ext:hasResourceFormat
            "application/geo+json",
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                    rdf:type
                                    schema:identifier
                                    schema:isPartOf
                                    void:inDataset
                                    ( schema:temporal shext:allPredicateValues )
                                    ( dwciri:toTaxon dwc:acceptedNameUsageID )
                                    ( dwciri:toTaxon dwc:originalNameUsageID )
                                    ( dwciri:toTaxon dwc:parentNameUsageID )
                                    ( geo:hasGeometry geo:asWKT )
                                    ( geo:hasDefaultGeometry geo:asWKT )
                                    ( schema:spatial shext:allPredicateValues )
                                    ( [ sh:inversePath rdfs:member ] rdf:type )
                                    ( [ sh:inversePath rdfs:member ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] rdf:type )
                                    ( [ sh:inversePath schema:about ] schema:identifier )
                                    ( [ sh:inversePath schema:about ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] void:inDataset )
                                 )
                    ]
            ] ;
    .

    prezprofiles:MinimalFeatureListingProfile a
            prof:Profile,
            sh:NodeShape,
            prez:ListingProfile,
            prez:ObjectProfile ;
        dcterms:description "Fast and minimal profile for listing Occurrences." ;
        dcterms:identifier "feature-listing-minimal"^^xsd:token ;
        dcterms:title "Feature Listing Minimal Profile" ;
        altr-ext:constrainsClass
            geo:Feature, rdfs:Resource , prez:CQLFilterResult , prez:SearchResult ;
        altr-ext:hasDefaultResourceFormat "text/turtle" ;
        altr-ext:hasResourceFormat
            "application/anot+ld+json",
            "application/ld+json",
            "application/rdf+xml",
            "text/anot+turtle",
            "text/turtle" ;
        sh:property
            [
                sh:path
                    [
                        sh:union (
                                    rdf:type
                                    schema:identifier
                                    schema:isPartOf
                                    void:inDataset
                                    ( [ sh:inversePath schema:about ] rdf:type )
                                    ( [ sh:inversePath schema:about ] schema:identifier )
                                    ( [ sh:inversePath schema:about ] schema:isPartOf )
                                    ( [ sh:inversePath schema:about ] void:inDataset )
                                 )
                    ]
            ] ;
    .
}
